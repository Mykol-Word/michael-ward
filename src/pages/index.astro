---
import '../styles/global.css';
import projectsData from '../data/projects.json';
import experienceData from '../data/experience.json';

const colorClasses = {
	blue: "border-blue-500",
	purple: "border-purple-500",
	green: "border-green-500",
	orange: "border-orange-500",
	pink: "border-pink-500",
};
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/png" href={`${import.meta.env.BASE_URL}images/coin.png`} />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Michael Ward</title>
		<script is:inline define:vars={{ basePath: import.meta.env.BASE_URL }}>
			window.BASE_URL = basePath;
		</script>
	</head>
	<body class="min-h-screen relative" style="background: repeating-linear-gradient(45deg, #2d5016, #2d5016 10px, #3a6b1e 10px, #3a6b1e 20px);">
		<div id="score-display" class="fixed top-4 right-4 z-50 retro-score">
			Gold: <span id="score">0</span>
		</div>

		<div class="responsive-container mx-auto px-4 sm:px-6 py-6 sm:py-12 relative z-10">
			<!-- Profile Section -->
			<div class="retro-panel mb-8">
				<div class="retro-title-bar">
					<span class="retro-title-text">Profile</span>
				</div>
				<div class="retro-content">
					<div class="flex flex-col sm:flex-row items-center sm:items-start gap-6">
						<!-- Profile Picture -->
						<div class="flex-shrink-0">
							<div class="retro-avatar">
								<div class="retro-avatar-inner">
									YN
								</div>
							</div>
						</div>

						<!-- Name and Description -->
						<div class="flex-1 w-full">
							<h1 class="retro-wordart mb-4">Michael Ward</h1>
							<div class="space-y-2">
								<div class="retro-stat-box">
									<span class="retro-label">School:</span>
									<span class="retro-value">UCLA - B.S. Computer Science & Engineering and Philosophy</span>
								</div>
								<div class="retro-stat-box">
									<span class="retro-label">Contact:</span>
									<a href="https://en.wikipedia.org/wiki/Trollface" target="_blank" class="retro-link">michaelward1916@ucla.edu</a>
								</div>
								<div class="retro-stat-box">
									<span class="retro-label">GitHub:</span>
									<a href="https://github.com/Mykol-Word" target="_blank" class="retro-link">https://github.com/Mykol-Word</a>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- About Section -->
			<div class="retro-panel mb-8">
				<div class="retro-title-bar">
					<span class="retro-title-text">About</span>
				</div>
				<div class="retro-content">
					<div class="retro-quest-item">
						<p class="retro-quest-text">
							I'm a third year undergraduate at UCLA studying Computer Science & Engineering and Philosophy. 
							I’m deeply interested in computer science as a whole but by necessity I've chosen to focus on only a few things, 
							namely, embedded systems, robotics, machine learning, and hardware–software integration. 
							In philosophy, I am interested in many areas as well, though my main focus is moral philosophy. <br><br>

							<i>If I had infinite time and resources, I would explore all niches of computer science and philosophy entirely and thoroughly.
							Since, I don't, I've chosen to emphasize my computer science degree and focus on only a few areas.</i> <br><br>

							My non-academic interests are weight-lifting, climbing, game development/modding, and playing video games. I'm pretty bad at all but the last one.
						</p>
					</div>
				</div>
			</div>

			<!-- Experience Section -->
			<div class="retro-panel mb-8">
				<div class="retro-title-bar">
					<span class="retro-title-text">Experience</span>
				</div>
				<div class="retro-content">
					<div class="space-y-4">
						{experienceData.map((experience, index) => (
							<div class="retro-quest-item">
								<div class="flex justify-between items-start mb-2">
									<div>
										<div class="flex items-center gap-3 flex-wrap">
											<h3 class="retro-quest-title">{experience.title}</h3>
											{experience.links && experience.links.length > 0 && (
												<div class="flex gap-2">
													{experience.links.map((link) => (
														<a href={link.url} target="_blank" class="retro-link text-sm">[{link.label}]</a>
													))}
												</div>
											)}
										</div>
										<p class="retro-employer-text">{experience.employer}</p>
									</div>
									<span class="retro-date-badge">{experience.date}</span>
								</div>
								<p class="retro-quest-text">
									{experience.description}
								</p>
							</div>
						))}
					</div>
				</div>
			</div>

			<!-- Projects Section -->
			<div class="retro-panel">
				<div class="retro-title-bar">
					<span class="retro-title-text">Projects</span>
				</div>
				<div class="retro-content">
					{projectsData.map((categoryGroup, groupIndex) => (
						<div class={groupIndex > 0 ? "mt-6" : ""}>
							<div class="retro-category-box">
								<div class="retro-category-header">
									{categoryGroup.category}
								</div>
								<div class="space-y-4">
									{categoryGroup.projects.map((project) => (
										<div class="retro-quest-item">
											<div class="flex justify-between items-start mb-2">
												<div class="flex items-center gap-3 flex-wrap">
													<h3 class="retro-quest-title">{project.title}</h3>
													{project.links && project.links.length > 0 && (
														<div class="flex gap-2">
															{project.links.map((link) => (
																<a href={link.url} target="_blank" class="retro-link text-sm">[{link.label}]</a>
															))}
														</div>
													)}
												</div>
												<span class="retro-date-badge">{project.date}</span>
											</div>
											<p class="retro-quest-text">
												{project.description}
											</p>
										</div>
									))}
								</div>
							</div>
						</div>
					))}
				</div>
			</div>
		</div>

		<style>
			/* RuneScape/Retro Panel Styles */
			.retro-panel {
				background: linear-gradient(135deg, #c9a961 0%, #a58a54 100%);
				border: 4px outset #d4af6a;
				box-shadow:
					0 8px 0 #5c4a2f,
					0 8px 16px rgba(0, 0, 0, 0.6),
					inset 0 2px 0 #e6d4a8;
			}

			.retro-title-bar {
				background: linear-gradient(180deg, #8b6f47 0%, #5c4a2f 100%);
				border: 2px solid #3d2f1f;
				border-bottom: 3px solid #2a1f14;
				padding: 8px 16px;
				margin: -4px -4px 0 -4px;
				box-shadow: inset 0 1px 0 #9d8359;
			}

			.retro-title-text {
				font-size: 1.5rem;
				font-weight: bold;
				color: #ffd700;
				text-shadow:
					2px 2px 0 #8b4513,
					-1px -1px 0 #000,
					1px -1px 0 #000,
					-1px 1px 0 #000,
					1px 1px 0 #000;
				font-family: 'Arial Black', sans-serif;
				letter-spacing: 1px;
			}

			.retro-content {
				padding: 20px;
				background: repeating-linear-gradient(
					0deg,
					rgba(255, 255, 255, 0.03) 0px,
					rgba(255, 255, 255, 0.03) 1px,
					transparent 1px,
					transparent 2px
				);
			}

			/* Profile Avatar */
			.retro-avatar {
				width: 140px;
				height: 140px;
				border: 5px ridge #8b6f47;
				background: linear-gradient(135deg, #654321 0%, #3d2817 100%);
				box-shadow:
					0 6px 0 #3d2f1f,
					0 6px 12px rgba(0, 0, 0, 0.8),
					inset 0 -3px 8px rgba(0, 0, 0, 0.5);
			}

			.retro-avatar-inner {
				width: 100%;
				height: 100%;
				display: flex;
				align-items: center;
				justify-content: center;
				background: linear-gradient(135deg, #ff6b35 0%, #f7931e 50%, #ffd700 100%);
				font-size: 3rem;
				font-weight: 900;
				color: white;
				text-shadow:
					3px 3px 0 rgba(0, 0, 0, 0.5),
					-1px -1px 0 rgba(0, 0, 0, 0.3);
				font-family: 'Impact', sans-serif;
			}

			/* WordArt-style Name */
			.retro-wordart {
				font-size: 2.5rem;
				font-weight: 900;
				background: linear-gradient(45deg,
					#ff0000 0%,
					#ff7f00 14%,
					#ffff00 28%,
					#00ff00 42%,
					#0000ff 57%,
					#4b0082 71%,
					#9400d3 85%,
					#ff0000 100%
				);
				-webkit-background-clip: text;
				background-clip: text;
				-webkit-text-fill-color: transparent;
				filter: drop-shadow(3px 3px 0 rgba(0, 0, 0, 0.4));
				font-family: 'Impact', 'Arial Black', sans-serif;
				letter-spacing: 2px;
			}

			/* Stat Boxes */
			.retro-stat-box {
				background: linear-gradient(135deg, #8b7355 0%, #6b5845 100%);
				border: 3px groove #a58a54;
				padding: 8px 12px;
				box-shadow:
					inset 0 2px 4px rgba(0, 0, 0, 0.3),
					0 2px 0 rgba(255, 255, 255, 0.1);
			}

			.retro-label {
				font-weight: bold;
				color: #ffd700;
				text-shadow: 1px 1px 0 #000;
				font-family: 'Arial', sans-serif;
			}

			.retro-value {
				color: #ffffff;
				text-shadow: 1px 1px 0 #000;
				font-family: 'Arial', sans-serif;
			}

			.retro-link {
				color: #00ffff;
				text-shadow: 1px 1px 0 #000;
				text-decoration: underline;
				font-family: 'Arial', sans-serif;
				transition: color 0.2s;
			}

			.retro-link:hover {
				color: #ff00ff;
				text-decoration: underline wavy;
			}

			/* Quest Items */
			.retro-quest-item {
				background: linear-gradient(135deg, #8b7355 0%, #6b5845 100%);
				border: 4px ridge #a58a54;
				padding: 12px 16px;
				box-shadow:
					0 4px 0 #3d2f1f,
					0 4px 8px rgba(0, 0, 0, 0.6),
					inset 0 1px 0 #9d8359;
				transition: transform 0.2s, box-shadow 0.2s;
			}

			.retro-quest-item:hover {
				transform: translateY(-2px);
				box-shadow:
					0 6px 0 #3d2f1f,
					0 6px 12px rgba(0, 0, 0, 0.7),
					inset 0 1px 0 #9d8359;
			}

			.retro-quest-title {
				font-size: 1.25rem;
				font-weight: bold;
				color: #ffd700;
				text-shadow:
					2px 2px 0 #000,
					-1px -1px 0 #000;
				font-family: 'Arial Black', sans-serif;
			}

			.retro-date-badge {
				background: linear-gradient(180deg, #ff6b35 0%, #c7522a 100%);
				color: white;
				padding: 6px 12px;
				border: 3px outset #ff8c61;
				font-weight: bold;
				font-family: 'Arial', sans-serif;
				text-shadow: 1px 1px 0 #000;
				box-shadow:
					0 3px 0 #8b3a1f,
					0 3px 6px rgba(0, 0, 0, 0.5);
			}

			.retro-quest-text {
				color: #f0e6d2;
				font-family: 'Arial', sans-serif;
				text-shadow: 1px 1px 0 #000;
				line-height: 1.6;
			}

			.retro-employer-text {
				font-size: 0.875rem;
				font-weight: 600;
				color: rgb(250, 204, 21); /* text-yellow-400 */
				margin-top: 0.25rem;
			}

			/* Category Box Styles */
			.retro-category-box {
				background: linear-gradient(135deg, #7a6344 0%, #5d4a32 100%);
				border: 3px ridge #9d8359;
				padding: 16px;
				box-shadow:
					inset 0 1px 3px rgba(0, 0, 0, 0.4),
					0 2px 4px rgba(0, 0, 0, 0.3);
			}

			.retro-category-header {
				background: linear-gradient(180deg, #a58a54 0%, #8b6f47 100%);
				border: 2px solid #6b5845;
				padding: 8px 16px;
				margin: -16px -16px 16px -16px;
				font-size: 1.25rem;
				font-weight: bold;
				color: #ffd700;
				text-shadow: 2px 2px 0 #000;
				font-family: 'Arial Black', sans-serif;
				box-shadow:
					inset 0 1px 0 #c9a961,
					0 2px 0 #3d2f1f;
			}

			/* Minigame Styles */
			.retro-score {
				background: linear-gradient(135deg, #c9a961 0%, #a58a54 100%);
				border: 4px outset #d4af6a;
				padding: 12px 20px;
				font-size: 1.25rem;
				font-weight: bold;
				color: #ffd700;
				text-shadow: 2px 2px 0 #000;
				font-family: 'Arial Black', sans-serif;
				box-shadow:
					0 4px 0 #5c4a2f,
					0 4px 8px rgba(0, 0, 0, 0.6);
			}

			.game-coin {
				width: 30px;
				height: 30px;
				cursor: pointer;
			}

			.game-coin:hover {
				transform: scale(1.2);
			}

			@keyframes fadeOut {
				0% {
					opacity: 1;
					transform: scale(1);
				}
				100% {
					opacity: 0;
					transform: scale(0.3);
				}
			}

			@keyframes coinAppear {
				0% {
					opacity: 0;
					transform: scale(0);
				}
				50% {
					transform: scale(1.2);
				}
				100% {
					opacity: 1;
					transform: scale(1);
				}
			}

			@keyframes float {
				0%, 100% {
					transform: translateY(0px);
				}
				50% {
					transform: translateY(-20px);
				}
			}

			@keyframes spin {
				0% {
					transform: rotateY(0deg);
				}
				100% {
					transform: rotateY(360deg);
				}
			}

			@keyframes collect {
				0% {
					transform: scale(1);
					opacity: 1;
				}
				100% {
					transform: scale(2) translateY(-50px);
					opacity: 0;
				}
			}

			/* Container Scaling */
			.responsive-container {
				max-width: 896px; /* Default for 1920x1080 */
			}

			/* High Resolution Display Styles - 4K (3840x2160) */
			@media (min-width: 3840px) {
				.responsive-container {
					max-width: 1792px; /* 2x for 4K */
				}

				.retro-title-text {
					font-size: 3rem; /* 2x of 1.5rem */
				}

				.retro-wordart {
					font-size: 5rem; /* 2x of 2.5rem */
				}

				.retro-avatar {
					width: 280px; /* 2x of 140px */
					height: 280px;
				}

				.retro-avatar-inner {
					font-size: 6rem; /* 2x of 3rem */
				}

				.retro-quest-title {
					font-size: 2.5rem; /* 2x of 1.25rem */
				}

				.retro-date-badge {
					font-size: 1.6rem;
					padding: 12px 24px; /* 2x */
				}

				.retro-score {
					font-size: 2.5rem; /* 2x of 1.25rem */
					padding: 24px 40px; /* 2x of 12px 20px */
					top: 2rem;
					right: 2rem;
				}

				.retro-content {
					padding: 40px; /* 2x of 20px */
				}

				.retro-stat-box {
					padding: 16px 24px; /* 2x of 8px 12px */
				}

				.retro-label, .retro-value, .retro-link {
					font-size: 2rem; /* 2x */
				}

				.retro-quest-text {
					font-size: 2rem; /* 2x */
					line-height: 1.6;
				}

				.retro-category-header {
					font-size: 2.5rem; /* 2x of 1.25rem */
					padding: 16px 32px; /* 2x of 8px 16px */
				}

				.retro-employer-text {
					font-size: 1.75rem; /* 2x of 0.875rem */
					margin-top: 0.5rem; /* 2x of 0.25rem */
				}

				.retro-quest-item {
					padding: 24px 32px; /* 2x of 12px 16px */
				}

				.retro-panel {
					border-width: 8px; /* 2x of 4px */
				}

				.retro-title-bar {
					border-width: 4px; /* 2x of 2px */
					padding: 16px 32px; /* 2x of 8px 16px */
				}
			}

			/* 1440p (2560x1440) - Scale by 1.33x */
			@media (min-width: 2560px) and (max-width: 3839px) {
				.responsive-container {
					max-width: 1194px; /* 1.33x */
				}

				.retro-title-text {
					font-size: 2rem; /* 1.33x of 1.5rem */
				}

				.retro-wordart {
					font-size: 3.33rem; /* 1.33x of 2.5rem */
				}

				.retro-avatar {
					width: 186px; /* 1.33x of 140px */
					height: 186px;
				}

				.retro-avatar-inner {
					font-size: 4rem; /* 1.33x of 3rem */
				}

				.retro-quest-title {
					font-size: 1.66rem; /* 1.33x of 1.25rem */
				}

				.retro-date-badge {
					font-size: 1.1rem;
					padding: 8px 16px; /* 1.33x */
				}

				.retro-score {
					font-size: 1.66rem; /* 1.33x of 1.25rem */
					padding: 16px 27px; /* 1.33x of 12px 20px */
				}

				.retro-content {
					padding: 27px; /* 1.33x of 20px */
				}

				.retro-stat-box {
					padding: 11px 16px; /* 1.33x of 8px 12px */
				}

				.retro-label, .retro-value, .retro-link {
					font-size: 1.33rem; /* 1.33x */
				}

				.retro-quest-text {
					font-size: 1.33rem; /* 1.33x */
					line-height: 1.6;
				}

				.retro-category-header {
					font-size: 1.66rem; /* 1.33x of 1.25rem */
					padding: 11px 21px; /* 1.33x of 8px 16px */
				}

				.retro-employer-text {
					font-size: 1.16rem; /* 1.33x of 0.875rem */
					margin-top: 0.33rem; /* 1.33x of 0.25rem */
				}

				.retro-quest-item {
					padding: 16px 21px; /* 1.33x of 12px 16px */
				}
			}

			/* Mobile Responsive Styles */
			@media (max-width: 640px) {
				.retro-title-text {
					font-size: 1rem;
				}

				.retro-wordart {
					font-size: 1.5rem;
				}

				.retro-avatar {
					width: 80px;
					height: 80px;
				}

				.retro-avatar-inner {
					font-size: 1.5rem;
				}

				.retro-quest-title {
					font-size: 0.9rem;
				}

				.retro-date-badge {
					display: none;
				}

				.retro-score {
					display: none;
				}

				.retro-content {
					padding: 10px;
				}

				.retro-stat-box {
					padding: 5px 8px;
					font-size: 0.75rem;
				}

				.retro-label, .retro-value, .retro-link {
					font-size: 0.75rem;
				}

				.retro-quest-text {
					font-size: 0.75rem;
					line-height: 1.4;
				}

				.retro-category-header {
					font-size: 0.9rem;
					padding: 6px 10px;
				}

				.retro-employer-text {
					font-size: 0.75rem;
				}
			}
		</style>

		<script is:inline>
			// Minigame Script
			document.addEventListener('DOMContentLoaded', () => {
				// Disable minigame on mobile
				if (window.innerWidth <= 640) {
					return;
				}

				let score = 0;
				const scoreDisplay = document.getElementById('score');

				if (!scoreDisplay) {
					console.error('Score display not found');
					return;
				}

				function createCoin() {
					const coin = document.createElement('div');
					coin.className = 'game-coin';

					// Add image element
					const img = document.createElement('img');
					const baseUrl = window.BASE_URL.endsWith('/') ? window.BASE_URL : window.BASE_URL + '/';
					img.src = baseUrl + 'images/coin.png';
					img.style.width = '50px';
					img.style.height = '50px';
					img.style.display = 'block';
					coin.appendChild(img);

					// Random position - avoid center content area
					const centerStart = (window.innerWidth - 896) / 2; // max-w-4xl is ~896px
					const centerEnd = centerStart + 1000;
					let x;

					// Spawn only on sides (not over main content)
					if (Math.random() < 0.5) {
						// Left side
						x = Math.random() * Math.max(0, centerStart - 50);
					} else {
						// Right side
						x = centerEnd + (Math.random() * Math.max(0, window.innerWidth - centerEnd - 50));
					}

					const y = Math.random() * (window.innerHeight - 50);

					// Set all positioning inline
					coin.style.position = 'fixed';
					coin.style.left = x + 'px';
					coin.style.top = y + 'px';
					coin.style.zIndex = '40';
					coin.style.opacity = '0';
					coin.style.animation = 'coinAppear 1.75s ease-out forwards';
					coin.style.animationDelay = Math.random() * 2 + 's';

					// Click handler
					coin.addEventListener('click', () => {
						score++;
						scoreDisplay.textContent = score;

						// Collect animation
						coin.style.animation = 'collect 0.5s ease-out forwards';
						setTimeout(() => {
							coin.remove();
						}, 500);
					});

					document.body.appendChild(coin);

					// Auto-remove after 8 seconds with fade animation
					setTimeout(() => {
						if (coin.parentElement) {
							coin.style.animation = 'fadeOut 0.8s ease-out forwards';
							setTimeout(() => coin.remove(), 800);
						}
					}, 8000);
				}

				// Spawn coins periodically
				setInterval(createCoin, 2000);

				// Initial coins
				setTimeout(createCoin, 500);
				setTimeout(createCoin, 1000);
			});
		</script>
	</body>
</html>
